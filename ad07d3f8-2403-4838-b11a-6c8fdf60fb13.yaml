- defaultTab: output
  description: "Checks Status of HTTP Service\n### This workflow demostrates restarting\
    \ an Apache HTTP service on a remote node. Also provides an example of a conditional\
    \ ruleset workflow strategy. \n\n# How this Runbook works:\n1. Job checks status\
    \ is HTTP service using `[service apache2 status]`\n2. If status is **=ACTIVE**\
    \ it will message exit, if status **!=ACTIVE** workflow will restart\n3. After\
    \ restart attempt, the workflow will check if successful & display final service\
    \ status \n\nSee the `ReadMe` for how to demo this Runbook\n---\n### How To Demo\
    \ This Runbook\n1. This job does not require any input options\n2. Show the [Workflow-Strategy]\
    \ Tab to view the ruleset\n2. Simply start the job by clicking on the button [Run-Job-Now]\n\
    3. This job has `safe-execution` and can be run multiple times.\n\n***Author:***\
    \ @dhuggins\n***LastUpdate:*** initial release\n\n"
  executionEnabled: false
  group: ðŸ©» Diagnostics ðŸ©»
  id: ad07d3f8-2403-4838-b11a-6c8fdf60fb13
  loglevel: INFO
  name: Restart Apache Service
  nodeFilterEditable: false
  plugins:
    ExecutionLifecycle: {}
  scheduleEnabled: true
  schedules: []
  sequence:
    commands:
    - configuration:
        text: Starting Service Restart
      description: Starting Service Restart
      nodeStep: false
      type: progress-badge
    - description: check apache status
      exec: service apache2 status | cat
      plugins:
        LogFilter:
        - config:
            hideOutput: 'false'
            logData: 'true'
            name: status
            regex: '.*Active: (\w+).*'
          type: key-value-data-multilines
    - configuration:
        export: status
        group: export
        value: ${data.status*}
      description: Export service status to global variable
      nodeStep: false
      type: export-var
    - configuration:
        text: service is active - exiting job
      description: service is active - exiting job
      nodeStep: false
      type: progress-badge
    - description: restart apache service
      exec: sudo systemctl restart apache2.service
    - description: wait for 10 seconds to check status
      exec: sleep 10
    - description: check apache status
      exec: systemctl status apache2.service
      plugins:
        LogFilter:
        - config:
            hideOutput: 'false'
            logData: 'true'
            name: new_status
            regex: '.*Active: (\w+).*'
          type: key-value-data-multilines
    - configuration:
        export: new_status
        group: export
        value: ${data.new_status*}
      description: set new status as global variable
      nodeStep: false
      type: export-var
    - configuration:
        text: Successful Restart
      description: Successful Restart
      nodeStep: false
      type: progress-badge
    - configuration:
        text: Unsuccessful Restart
      description: Unsuccessful Restart
      nodeStep: false
      type: progress-badge
    keepgoing: false
    pluginConfig:
      WorkflowStrategy:
        ruleset:
          rules: "## Example Complex Ruleset \n# Autogenerated Directives\n[1] run-at-start\n\
            [2] run-after:1\n[3] run-after:2\n[4] run-after:3\n[5] run-after:3\n[6]\
            \ run-after:5\n[7] run-after:6\n[8] run-after:7\n[9] run-after:8\n[10]\
            \ run-after:8\n\n# Autogenerated Conditions\n[4] if:export.status==active\n\
            [5-8] if:export.status!=active\n[9] if:export.new_status==active if:export.status!=active\n\
            [10] if:export.new_status!=active if:export.status!=active\n"
    strategy: ruleset
  tags: apache
  timeout: 10m
  uuid: ad07d3f8-2403-4838-b11a-6c8fdf60fb13

