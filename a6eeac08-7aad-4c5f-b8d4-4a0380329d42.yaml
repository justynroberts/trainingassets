- defaultTab: output
  description: "    \n\n\n> Rulesets to allow more complex logic processing\n\n**Description:**\n\
    An fun example highlighting Ruleset Capabilities.This should give an overview\
    \ of how to use Rulesets for complex 'If This, then That' type of scenarios\n\
    <br>Run to see how it works, Edit the work flow to understand the syntax and flow.\n\
    **Assumptions:**\n\n - RBA with Runner Installed OR Self Hosted (PAOP)\n - Linux/Windows\
    \ compatible\n\n**Documentation:** Not Applicable"
  executionEnabled: true
  group: ðŸ‘£ Your First Steps in Automation ðŸ‘£
  id: a6eeac08-7aad-4c5f-b8d4-4a0380329d42
  loglevel: INFO
  name: 5. Rulesets - An Example
  nodeFilterEditable: false
  options:
  - description: |-
      Select the Ice Cream Flavour
      You can choose
      - Chocolate
      - Vanilla
      - Both
    enforced: true
    label: Select Flavour
    name: flavour
    required: true
    values:
    - both
    - chocolate
    - vanilla
    valuesListDelimiter: ','
  - description: Select topping for Ice Cream
    enforced: true
    label: Select Topping
    name: topping
    required: true
    values:
    - 'no'
    - 'yes'
    valuesListDelimiter: ','
  plugins:
    ExecutionLifecycle: {}
  runnerSelector:
    filter: WORKSHOP
    runnerFilterMode: TAGS
    runnerFilterType: TAG_FILTER_AND
  scheduleEnabled: false
  schedules: []
  sequence:
    commands:
    - description: get the cones
      exec: echo "get the cones"; sleep 2
    - description: go to the ice cream booth
      exec: echo "go to booth"; sleep 2
    - description: flavour with no topping
      exec: echo "you have selected ${option.flavour} with no topping" ; sleep 2
    - description: flavour with topping
      exec: echo "you have selected ${option.flavour} with topping" ; sleep 2
    - description: wrap up
      exec: echo "wrap"; sleep 2
    - description: charge and print receipt
      exec: echo "paying"; sleep 2
    - description: charge and print receipt + topping $
      exec: echo "paying extra for topping"
    keepgoing: false
    pluginConfig:
      LogFilter:
      - config:
          loglevel: verbose
          matchLoglevel: warn
          quietMatch: 'true'
          regex: ^\[wf.*
        type: quiet-output
      WorkflowStrategy:
        ruleset:
          rules: |-
            # Autogenerated Directives
            [1] run-at-start
            [2] run-after:1
            [3] run-after:2
            [4] run-after:2
            [5] run-after:3,4
            [6] run-after:5
            [7] run-after:5

            # Autogenerated Conditions
            [3] if:option.flavour==vanilla if:option.topping==no
            [3] if:option.flavour==chocolate if:option.topping==no
            [3] if:option.flavour==both if:option.topping==no
            [4] if:option.flavour==vanilla if:option.topping==yes
            [4] if:option.flavour==chocolate if:option.topping==yes
            [4] if:option.flavour==both if:option.topping==yes
            [6] if:option.flavour==vanilla if:option.topping==no
            [6] if:option.flavour==chocolate if:option.topping==no
            [6] if:option.flavour==both if:option.topping==no
            [7] if:option.flavour==vanilla if:option.topping==yes
            [7] if:option.flavour==chocolate if:option.topping==yes
            [7] if:option.flavour==both if:option.topping==yes
    strategy: ruleset
  tags: ruleset
  uuid: a6eeac08-7aad-4c5f-b8d4-4a0380329d42

